C51 COMPILER V9.01   EEPROM                                                                11/30/2018 09:41:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN EEPROM.OBJ
COMPILER INVOKED BY: D:\Keil C\C51\BIN\C51.EXE EEPROM.c OMF2 BROWSE DEBUG

line level    source

   1          #include "main.h"
   2          #include "delay.h"
   3          
   4          
   5          
   6          void Soft_SPI_Init();
   7          void Soft_SPI_Write(unsigned char b);
   8          unsigned char Soft_SPI_Read(void);
   9          void EEPROM_25LCxxx_Write(unsigned int add, unsigned char b);
  10          unsigned char EEPROM_25LCxxx_Read(unsigned int add);
  11          unsigned char EEPROM_25LCxxx_WIP();
  12          
  13          void main()
  14          {
  15   1          unsigned char i;
  16   1              // Khoi tao giao tiep SPI
  17   1              Soft_SPI_Init();
  18   1              for(i=0;i<100;i++)
  19   1              {
  20   2               EEPROM_25LCxxx_Write(i,i);
  21   2              }
  22   1      //      delay(500);        neu co ham kiem tra thi khong can delay
  23   1              
  24   1              while(1)
  25   1              {
  26   2                for(i=0;i<100;i++)
  27   2                {
  28   3                  P1 = EEPROM_25LCxxx_Read(i);
  29   3                      delay(500);
  30   3                }
  31   2              }
  32   1      }
  33          
  34          // Ghi mot byte b sang EEPROM, tai dia chi add
  35          void EEPROM_25LCxxx_Write(unsigned int add, unsigned char b)
  36          {
  37   1              SPI_CS = 0;
  38   1              Soft_SPI_Write(0x06);                   // Gui lenh WREN
  39   1              SPI_CS = 1;
  40   1              
  41   1              SPI_CS = 0;
  42   1              Soft_SPI_Write(0x02);                                           // Gui lenh WRITE
  43   1              Soft_SPI_Write(add>>8);                                 // Gui byte cao cua dia chi
  44   1              Soft_SPI_Write(add & 0x00FF);           // Gui byte thap cua dia chi
  45   1              Soft_SPI_Write(b);
  46   1              SPI_CS = 1;
  47   1      
  48   1              while(EEPROM_25LCxxx_WIP());
  49   1      }
  50          unsigned char EEPROM_25LCxxx_Read(unsigned int add)
  51          {
  52   1        unsigned char b;
  53   1      
  54   1        SPI_CS = 0;
  55   1        Soft_SPI_Write(0x03);
C51 COMPILER V9.01   EEPROM                                                                11/30/2018 09:41:27 PAGE 2   

  56   1        Soft_SPI_Write(add>>8);                                       // Gui byte cao cua dia chi
  57   1        Soft_SPI_Write(add & 0x00FF);         // Gui byte thap cua dia chi
  58   1        b = Soft_SPI_Read();
  59   1        SPI_CS = 1;
  60   1        return b;
  61   1      }
  62          unsigned char EEPROM_25LCxxx_WIP()
  63          {
  64   1        unsigned char result;
  65   1        SPI_CS = 0;
  66   1        Soft_SPI_Write(0x05);
  67   1        result = Soft_SPI_Read();
  68   1        SPI_CS = 1;
  69   1        return result&0x01;
  70   1      }
  71          void Soft_SPI_Init()
  72          {
  73   1              SPI_CS = 1;     
  74   1              SPI_SCLK = 0;
  75   1              SPI_MISO = 1;
  76   1      }
  77          
  78          unsigned char Soft_SPI_Read(void)
  79          {
  80   1              // software SPI read, MSB read first
  81   1              unsigned char i, b;
  82   1      
  83   1              for(i=0;i<8;i++)
  84   1              {
  85   2                      b <<= 1;
  86   2                      SPI_SCLK = 1;
  87   2                      if(SPI_MISO)
  88   2                              b |= 0x01;
  89   2                      SPI_SCLK = 0;
  90   2              }
  91   1      
  92   1              return b;
  93   1      }
  94          
  95          void Soft_SPI_Write(unsigned char b)
  96          {
  97   1              // software SPI, send MSB first
  98   1              unsigned char i;
  99   1      
 100   1              for(i=0;i<8;i++)
 101   1              {
 102   2                      if((b&0x80)==0x80)
 103   2                              SPI_MOSI = 1;
 104   2                      else
 105   2                              SPI_MOSI = 0;
 106   2      
 107   2                      SPI_SCLK = 1;
 108   2                      b <<= 1;
 109   2                      SPI_SCLK = 0;
 110   2              }
 111   1      }
 112          
 113          
 114          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.01   EEPROM                                                                11/30/2018 09:41:27 PAGE 3   

   CODE SIZE        =    203    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
